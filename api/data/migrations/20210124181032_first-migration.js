exports.up = async (knex) => {
  await knex.schema
    .createTable('users', (users) => {
      users.increments('user_id')
      users.string('user_username', 200).notNullable()
      users.string('user_password', 200).notNullable()
      users.string('user_email', 320).notNullable()
    })
    .createTable('goals', (goals) => {
      goals.increments('goal_id')
      goals.integer('user_id')
        .notNullable()
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      goals.string('goal_title', 200).notNullable()
      goals.date('achieve_by').notNullable()
      goals.decimal('percentage_completed') // default value?
      goals.boolean('completed') // do I need a default value?
    })
    .createTable('steps', (steps) => {
      steps.increments('step_id')
      steps.integer('goal_id')
        .notNullable()
        .unsigned()
        .references('goal_id')
        .inTable('goals')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      steps.integer('step_number', 200).notNullable()
      steps.string('step_text', 500).notNullable()
      steps.boolean('step_completed') // default value?
    })
    .createTable('likes', (likes) => {
      likes.increments('like_id')
      likes.integer('user_id')
        .notNullable()
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      likes.integer('goal_id')
        .notNullable()
        .unsigned()
        .references('goal_id')
        .inTable('goals')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
    })
    .createTable('comments', (comments) => {
      comments.increments('comment_id')
      comments.integer('user_id')
        .notNullable()
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      comments.integer('goal_id')
        .notNullable()
        .unsigned()
        .references('goal_id')
        .inTable('goals')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      comments.string('comment_text')
      comments.timestamp('created_at').defaultTo(knex.fn.now())
    })
    .createTable('relationships', (relationships) => {
      relationships.increments('relationship_id')
      relationships.integer('follower_id')
        .notNullable()
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
      relationships.integer('following_id')
        .notNullable()
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('CASCADE')
        .onUpdate('CASCADE')
    })
}

exports.down = async (knex) => {
  await knex.schema
    .dropTableIfExists('relationships')
    .dropTableIfExists('comments')
    .dropTableIfExists('likes')
    .dropTableIfExists('steps')
    .dropTableIfExists('goals')
    .dropTableIfExists('users')

}
